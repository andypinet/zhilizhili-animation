{"version":3,"sources":["text.css","../framework/sass/utils/_layout.scss","../framework-plus/sass/utils/_reset.scss","text.scss","../../bower_components/sass-material-colors/sass/_sass-material-colors-function.scss","../framework/sass/utils/_bem.scss","utils/_animtion-tool.scss"],"names":[],"mappings":"AAAA;;;;;;;;;GASG;ACTH;EACE,YAAW;EACX,aAAY,EAAA;;ACAV;EACI,UAAS,EAAA;;ACYjB;EACI;IACI,gCAAuB;IAAvB,wBAAuB,EAAA;EAE3B;IACI,kCAAyB;IAAzB,0BAAyB,EAAA,EAAA;;AALjC;EACI;IACI,gCAAuB;IAAvB,wBAAuB,EAAA;EAE3B;IACI,kCAAyB;IAAzB,0BAAyB,EAAA,EAAA;AAIjC;EACI;IACI,gCAAuB;IAAvB,wBAAuB,EAAA;EAE3B;IACI,mCAA0B;IAA1B,2BAA0B,EAAA,EAAA;AALlC;EACI;IACI,gCAAuB;IAAvB,wBAAuB,EAAA;EAE3B;IACI,mCAA0B;IAA1B,2BAA0B,EAAA,EAAA;AAIlC;EACI;IACI,WAAU;IACV,oCAA2B;IAA3B,4BAA2B,EAAA,EAAA;AAHnC;EACI;IACI,WAAU;IACV,oCAA2B;IAA3B,4BAA2B,EAAA,EAAA;AAInC;EACI,kCAAyB;EAAzB,0BAAyB,EAAA;;AAG7B;EACI,0CAAiC;EAAjC,kCAAiC,EAAA;;AAGrC;EACI,2CAAkC;EAAlC,mCAAkC;EAClC,gCAAuB;EAAvB,wBAAuB,EAAA;;AAG3B;EAEI,0BC3CoE;ED4CpE,eAAc;EACd,WAAU,EAAA;;AErDZ;EF0DM,WAAU,EAAA;EEzChB;IF4CU,WAAU,EAAA;;AAMlB;EACI,mBAAkB,EAAA;AAGtB;EACI,mBAAkB,EAAA;AAGtB;EACI,kBAAiB,EAAA;AAGrB;EACI,YAAW;EACX,aAAY;EACZ,mBAAkB;EAClB,kBAAiB;EACjB,0BAAyB;EACzB,mBAAkB,EAAA;;AGxFtB;EACI,+BAAmC;EAAnC,uBAAmC,EAAA;;AADvC;EACI,+BAAmC;EAAnC,uBAAmC,EAAA;;AASvC;EACI,mCAAsC;EAAtC,2BAAsC,EAAA;;AAK1C;EACI,qCHiFuC;EGjFvC,6BHiFuC,EAAA;;AGlF3C;EACI,4CHqF8C;EGrF9C,oCHqF8C;EAClD,0CAAiC;EAAjC,kCAAiC,EAAA","file":"text.css","sourcesContent":["/**\n * Retrieves a color value from the $material-colors Sass map\n * Inspired by https://github.com/nilskaspersson/Google-Material-UI-Color-Palette/\n *\n * @function\n * @param {string} color-name             - quoted, lower-case, dasherized color\n *                                          name (e.g. 'pink', 'amber')\n * @param {string} [color-variant='500']  - quoted, lowercase color variant (e.g.\n *                                          '200', 'a100')\n */\nbody, html, main {\n  width: 100%;\n  height: 100%; }\n\nbody {\n  margin: 0; }\n\n@keyframes clockwise {\n  from {\n    transform: rotate(0deg); }\n  to {\n    transform: rotate(360deg); } }\n@keyframes counter-clockwise {\n  from {\n    transform: rotate(0deg); }\n  to {\n    transform: rotate(-360deg); } }\n@keyframes rubberBand---reset {\n  to {\n    opacity: 1;\n    transform: scale3d(1, 1, 1); } }\n.clockwise {\n  animation-name: clockwise; }\n\n.counter-clockwise {\n  animation-name: counter-clockwise; }\n\n.rubber-brand---reset {\n  animation-name: rubberBand---reset;\n  animation-delay: 2000ms; }\n\nmain {\n  background-color: #f44336;\n  color: #ffffff;\n  opacity: 0; }\n\n.element-box {\n  opacity: 0; }\n  .element-box--show {\n    opacity: 1; }\n\nhtml .section-1-element-2 {\n  text-align: center; }\nhtml .section-1-element-4 {\n  text-align: center; }\nhtml .section-1-element-5 {\n  text-align: right; }\nhtml .audio-btn {\n  width: 40px;\n  height: 40px;\n  text-align: center;\n  line-height: 40px;\n  border: 1px solid #000000;\n  border-radius: 50%; }\n\n.lfx-ani-delay-300-ms {\n  animation-delay: 300ms; }\n\n.lfx-ani-delay-600-ms {\n  animation-delay: 600ms; }\n\n.lfx-ani-duration-1500-ms {\n  animation-duration: 1500ms; }\n\n.lfx-ani-iteration-count-1 {\n  animation-iteration-count: 1; }\n\n.lfx-ani-iteration-count-infinite {\n  animation-iteration-count: infinite;\n  animation-timing-function: linear; }\n\n\n","%full-parent {\n  width: 100%;\n  height: 100%;\n}\n\n@mixin full-screen() {\n  body, html {\n    @extend %full-parent;\n  }\n}","/// @export\n@mixin reset-body-marigin() {\n    body {\n        margin: 0;\n    }\n}\n\n/// @export\n@mixin common-reset() {\n    @include reset-body-marigin();\n}\n","@import \"../../bower_components/sass-material-colors/sass/_sass-material-colors.scss\";\n\n@import \"../framework/sass/utils/component\";\n@import \"../framework/sass/utils/bem\";\n\n@import \"../framework/sass/utils/layout\";\n\n@import \"../framework-plus/sass/utils/reset\";\n\n// your app import\n@import \"utils/animtion-tool\";\n\n@include full-screen();\n@include common-reset();\n\n@keyframes clockwise {\n    from  {\n        transform: rotate(0deg);\n    }\n    to {\n        transform: rotate(360deg);\n    }\n}\n\n@keyframes counter-clockwise {\n    from  {\n        transform: rotate(0deg);\n    }\n    to {\n        transform: rotate(-360deg);\n    }\n}\n\n@keyframes rubberBand---reset {\n    to {\n        opacity: 1;\n        transform: scale3d(1, 1, 1);\n    }\n}\n\n.clockwise {\n    animation-name: clockwise;\n}\n\n.counter-clockwise {\n    animation-name: counter-clockwise;\n}\n\n.rubber-brand---reset {\n    animation-name: rubberBand---reset;\n    animation-delay: 2000ms;\n}\n\nmain {\n    @extend %full-parent;\n    background-color: material-color(\"red\");\n    color: #ffffff;\n    opacity: 0;\n}\n\n@include component(\"element-box\") {\n    @include block(\".element-box\") {\n        opacity: 0;\n\n        @include modifiy(\"show\") {\n            opacity: 1;\n        }\n    }\n}\n\nhtml {\n    .section-1-element-2 {\n        text-align: center;\n    }\n\n    .section-1-element-4 {\n        text-align: center;\n    }\n\n    .section-1-element-5 {\n        text-align: right;\n    }\n\n    .audio-btn {\n        width: 40px;\n        height: 40px;\n        text-align: center;\n        line-height: 40px;\n        border: 1px solid #000000;\n        border-radius: 50%;\n    }\n}\n\n@include create-lfx-ani-delay-class(300);\n\n@include create-lfx-ani-delay-class(600);\n\n@include create-lfx-ani-duration-class(1500);\n\n@include create-lfx-ani-iteration-count-class(1) {\n\n};\n\n@include create-lfx-ani-iteration-count-class(infinite) {\n    animation-timing-function: linear;\n};","@import 'sass-material-colors-map';\n/**\n * Retrieves a color value from the $material-colors Sass map\n * Inspired by https://github.com/nilskaspersson/Google-Material-UI-Color-Palette/\n *\n * @function\n * @param {string} color-name             - quoted, lower-case, dasherized color\n *                                          name (e.g. 'pink', 'amber')\n * @param {string} [color-variant='500']  - quoted, lowercase color variant (e.g.\n *                                          '200', 'a100')\n */\n@function material-color($color-name, $color-variant: '500') {\n  $color: map-get(map-get($material-colors, $color-name),$color-variant);\n  @if $color {\n    @return $color;\n  } @else {\n    // Libsass still doesn't seem to support @error\n    @warn \"=> ERROR: COLOR NOT FOUND! <= | Your $color-name, $color-variant combination did not match any of the values in the $material-colors map.\";\n  }\n}\n","$_scss-component-block: () !global;\n\n\n@mixin block($name) {\n  #{$name} {\n    @content;\n  }\n}\n\n@mixin element($name: null) {\n  $parentsel: #{&};\n  @if str-index($parentsel, \"--\") != null {\n    $arr: str-explode($parentsel, \"--\");\n    $parentsel: nth($arr, 1);\n  }\n  #{$parentsel}__#{$name} {\n    @content;\n  }\n}\n\n@mixin modifiy($name: null) {\n  &--#{$name} {\n    @content;\n  }\n}","@mixin create-lfx-ani-delay-class($delaytime, $unit: ms, $prefix: \".lfx-ani-delay\") {\n    #{$prefix}-#{$delaytime}-#{$unit} {\n        animation-delay: $delaytime + $unit;\n    }\n}\n\n@mixin create-custom-delay-class($delaytime, $unit: ms) {\n    @include create-lfx-ani-delay-class($delaytime, $unit, $prefix: \".custom\");\n}\n\n@mixin create-lfx-ani-duration-class($delaytime, $unit: ms, $prefix: \".lfx-ani-duration\") {\n    #{$prefix}-#{$delaytime}-#{$unit} {\n        animation-duration: $delaytime + $unit;\n    }\n}\n\n@mixin create-lfx-ani-iteration-count-class($count: 1, $prefix: \".lfx-ani-iteration-count\") {\n    #{$prefix}-#{$count} {\n        animation-iteration-count: $count;\n        @content;\n    }\n}"],"sourceRoot":"/source/"}